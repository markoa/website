---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import BlogSidebar from "../../components/BlogSidebar.astro";
import MenuButton from "../../components/MenuButton.astro";
import ImageLightbox from "../../components/ImageLightbox.astro";
import { icon } from "@fortawesome/fontawesome-svg-core";
import {
  faXTwitter,
  faBluesky,
  faLinkedin,
} from "@fortawesome/free-brands-svg-icons";
import { formatDate } from "../../utils/date";

const posts = await getCollection("signals", ({ data }) => {
  return import.meta.env.PROD ? data.published : true;
});

const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const icons = {
  xTwitter: icon(faXTwitter).html[0],
  bluesky: icon(faBluesky).html[0],
  linkedin: icon(faLinkedin).html[0],
};

// Render all posts' content
const renderedPosts = await Promise.all(
  sortedPosts.map(async (post) => {
    if (post.render) {
      const { Content } = await post.render();
      return { ...post, Content };
    }
    return post;
  })
);
---

<Layout title="Signals">
  <div class="flex dark:bg-dark-base min-h-screen">
    <MenuButton />
    <BlogSidebar />

    <!-- Main content -->
    <main
      class="w-full px-8 pt-24 pb-16 lg:py-16 lg:pl-48 lg:pr-8 max-w-[680px] lg:ml-48"
    >
      <div class="space-y-48">
        {
          renderedPosts.map((post) => (
            <article class="space-y-4">
              {post.data.type === "photo" && post.data.image && (
                <>
                  <ImageLightbox
                    image={post.data.image}
                    alt={post.data.description || "Photo post"}
                  />
                  {post.data.description && (
                    <p class="text-gray-600 dark:text-gray-300 mb-4">
                      {post.data.description}
                    </p>
                  )}
                </>
              )}

              {post.data.type !== "photo" && (
                <h2 class="text-xl dark:text-white">
                  {post.data.type === "link" ? (
                    <a
                      href={post.data.url}
                      class="hover:text-gray-600 dark:hover:text-gray-300"
                    >
                      {post.data.title} â†’
                    </a>
                  ) : (
                    <a
                      href={`/signals/${post.slug}`}
                      class="hover:text-gray-600 dark:hover:text-gray-300"
                    >
                      {post.data.title}
                    </a>
                  )}
                </h2>
              )}

              <div class="prose prose-gray prose-quoteless prose-h3:text-lg dark:prose-invert marker:text-gray-400 dark:marker:text-gray-500 prose-li:marker:text-gray-400 dark:prose-li:marker:text-gray-500 prose-blockquote:border-gray-400 dark:prose-blockquote:border-gray-500">
                {post.Content && <post.Content />}
              </div>

              <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400 font-sans">
                <a href={`/signals/${post.slug}`}>
                  {formatDate(post.data.pubDate)}
                </a>
                <div class="flex items-center gap-3">
                  {(post.data.xPostId ||
                    post.data.blueskyPostId ||
                    post.data.linkedinPostId) && <span>interact on</span>}
                  {post.data.xPostId && (
                    <a
                      href={`https://x.com/markoa/status/${post.data.xPostId}`}
                      class="hover:text-gray-900 dark:hover:text-gray-300"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <span class="w-3 h-3">
                        <span class="[&>svg]:w-3 [&>svg]:h-3">
                          <Fragment set:html={icons.xTwitter} />
                        </span>
                      </span>
                    </a>
                  )}
                  {post.data.blueskyPostId && (
                    <a
                      href={`https://bsky.app/profile/markoanastasov.bsky.social/post/${post.data.blueskyPostId}`}
                      class="hover:text-gray-900 dark:hover:text-gray-300"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <span class="w-3 h-3">
                        <span class="[&>svg]:w-3 [&>svg]:h-3">
                          <Fragment set:html={icons.bluesky} />
                        </span>
                      </span>
                    </a>
                  )}
                  {post.data.linkedinPostId && (
                    <a
                      href={`https://www.linkedin.com/posts/${post.data.linkedinPostId}/`}
                      class="hover:text-gray-900 dark:hover:text-gray-300"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <span class="w-3 h-3">
                        <span class="[&>svg]:w-3 [&>svg]:h-3">
                          <Fragment set:html={icons.linkedin} />
                        </span>
                      </span>
                    </a>
                  )}
                </div>
              </div>
            </article>
          ))
        }
      </div>
    </main>
  </div>
</Layout>
